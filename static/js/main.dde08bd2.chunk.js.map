{"version":3,"sources":["components/FeedbackOptions/FeedbackOptions.module.css","components/Statistics/Statistics.module.css","components/Notification/Notification.module.css","components/Section/Section.jsx","components/FeedbackOptions/FeedbackOptions.jsx","components/Statistics/Statistics.jsx","components/Notification/Notification.jsx","data/options.jsx","App.js","index.js"],"names":["module","exports","Section","title","children","FeedbackOptions","options","onLeaveFeedback","className","s","btnList","map","option","button","type","onClick","Statistics","good","neutral","bad","total","positivePercentage","statisticList","Notification","message","notification","FEEDBACK_OPTIONS","App","useState","setGood","setNeutral","setBad","countTotalFeedback","prevState","Math","round","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6IACAA,EAAOC,QAAU,CAAC,OAAS,gCAAgC,QAAU,mC,iBCArED,EAAOC,QAAU,CAAC,cAAgB,oC,gBCAlCD,EAAOC,QAAU,CAAC,aAAe,qC,qHCClB,SAASC,EAAT,GAAuC,IAApBC,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,SACvC,OACE,oCACE,6BAAKD,IACJC,K,oBCHQ,SAASC,EAAT,GAAwD,IAA7BC,EAA4B,EAA5BA,QAASC,EAAmB,EAAnBA,gBACjD,OACE,oBAAIC,UAAWC,IAAEC,QAAjB,SACGJ,EAAQK,KAAI,SAAAC,GAAM,OACjB,6BACE,wBACEJ,UAAWC,IAAEI,OACbC,KAAK,SACLC,QAAS,kBAAMR,EAAgBK,IAHjC,SAKGA,KANIA,Q,oBCJF,SAASI,EAAT,GAMX,IALFC,EAKC,EALDA,KACAC,EAIC,EAJDA,QACAC,EAGC,EAHDA,IACAC,EAEC,EAFDA,MACAC,EACC,EADDA,mBAEA,OACE,qBAAIb,UAAWC,IAAEa,cAAjB,UACE,6BACE,0CAAaL,OAEf,6BACE,6CAAgBC,OAElB,6BACE,yCAAYC,OAEd,6BACE,2CAAcC,OAEhB,6BACE,uDAA0BC,EAA1B,Y,oBCtBO,SAASE,EAAT,GAAoC,IAAZC,EAAW,EAAXA,QACrC,OAAO,mBAAGhB,UAAWC,IAAEgB,aAAhB,SAA+BD,ICJjC,IAAME,EAAmB,CAAC,OAAQ,UAAW,OCOrC,SAASC,IAAO,IAAD,EACJC,mBAAS,GADL,mBACrBX,EADqB,KACfY,EADe,OAEED,mBAAS,GAFX,mBAErBV,EAFqB,KAEZY,EAFY,OAGNF,mBAAS,GAHH,mBAGrBT,EAHqB,KAGhBY,EAHgB,KAwBtBC,EAAqB,WACzB,OAAOf,EAAOC,EAAUC,GAQ1B,OACE,qCACE,cAACjB,EAAD,CAASC,MAAM,wBAAf,SACE,cAACE,EAAD,CACEC,QAASoB,EACTnB,gBAjCa,SAAAK,GACnB,OAAQA,GACN,IAAK,OACHiB,GAAQ,SAAAI,GAAS,OAAIA,EAAY,KACjC,MAEF,IAAK,UACHH,GAAW,SAAAG,GAAS,OAAIA,EAAY,KACpC,MAEF,IAAK,MACHF,GAAO,SAAAE,GAAS,OAAIA,EAAY,KAChC,MAEF,QACE,aAsBF,cAAC/B,EAAD,CAASC,MAAM,aAAf,SACG6B,IACC,cAAChB,EAAD,CACEC,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOY,IACPX,mBArBDW,IACHE,KAAKC,MAAOlB,EAAOe,IAAwB,KAC3C,IAsBE,cAACT,EAAD,CAAcC,QAAQ,2BCtDhCY,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAACX,EAAD,MAEFY,SAASC,eAAe,W","file":"static/js/main.dde08bd2.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"FeedbackOptions_button__3__G9\",\"btnList\":\"FeedbackOptions_btnList__3a_7B\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"statisticList\":\"Statistics_statisticList__5WugM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"notification\":\"Notification_notification__1R_20\"};","import PropTypes from 'prop-types';\n\nexport default function Section({ title, children }) {\n  return (\n    <section>\n      <h2>{title}</h2>\n      {children}\n    </section>\n  );\n}\n\nSection.propTypes = {\n  title: PropTypes.string.isRequired,\n  children: PropTypes.element.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport s from './FeedbackOptions.module.css';\n\nexport default function FeedbackOptions({ options, onLeaveFeedback }) {\n  return (\n    <ul className={s.btnList}>\n      {options.map(option => (\n        <li key={option}>\n          <button\n            className={s.button}\n            type=\"button\"\n            onClick={() => onLeaveFeedback(option)}\n          >\n            {option}\n          </button>\n        </li>\n      ))}\n    </ul>\n  );\n}\n\nFeedbackOptions.propTypes = {\n  options: PropTypes.arrayOf(PropTypes.string),\n  onLeaveFeedback: PropTypes.func.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport s from './Statistics.module.css';\n\nexport default function Statistics({\n  good,\n  neutral,\n  bad,\n  total,\n  positivePercentage,\n}) {\n  return (\n    <ul className={s.statisticList}>\n      <li>\n        <span>Good: {good}</span>\n      </li>\n      <li>\n        <span>Neutral: {neutral}</span>\n      </li>\n      <li>\n        <span>Bad: {bad}</span>\n      </li>\n      <li>\n        <span>Total: {total}</span>\n      </li>\n      <li>\n        <span>Positive feedback: {positivePercentage}%</span>\n      </li>\n    </ul>\n  );\n}\n\nStatistics.propTypes = {\n  good: PropTypes.number.isRequired,\n  neutral: PropTypes.number.isRequired,\n  bad: PropTypes.number.isRequired,\n  total: PropTypes.number.isRequired,\n  positivePerc: PropTypes.number,\n};\n","import PropTypes from 'prop-types';\nimport s from './Notification.module.css';\n\nexport default function Notification({ message }) {\n  return <p className={s.notification}>{message}</p>;\n}\n\nNotification.propTypes = {\n  message: PropTypes.string.isRequired,\n};\n","export const FEEDBACK_OPTIONS = ['good', 'neutral', 'bad'];\r\n","import { useState } from 'react';\nimport Section from './components/Section/Section';\nimport FeedbackOptions from './components/FeedbackOptions/FeedbackOptions';\nimport Statistics from './components/Statistics/Statistics';\nimport Notification from './components/Notification/Notification';\nimport { FEEDBACK_OPTIONS } from './data/options';\n\nexport default function App() {\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n\n  const btnIncrement = option => {\n    switch (option) {\n      case 'good':\n        setGood(prevState => prevState + 1);\n        break;\n\n      case 'neutral':\n        setNeutral(prevState => prevState + 1);\n        break;\n\n      case 'bad':\n        setBad(prevState => prevState + 1);\n        break;\n\n      default:\n        return;\n    }\n  };\n\n  const countTotalFeedback = () => {\n    return good + neutral + bad;\n  };\n  const countPositiveFeedbackPercentage = () => {\n    return countTotalFeedback()\n      ? Math.round((good / countTotalFeedback()) * 100)\n      : 0;\n  };\n\n  return (\n    <>\n      <Section title=\"Please leave feedback\">\n        <FeedbackOptions\n          options={FEEDBACK_OPTIONS}\n          onLeaveFeedback={btnIncrement}\n        />\n      </Section>\n\n      <Section title=\"Statistics\">\n        {countTotalFeedback() ? (\n          <Statistics\n            good={good}\n            neutral={neutral}\n            bad={bad}\n            total={countTotalFeedback()}\n            positivePercentage={countPositiveFeedbackPercentage()}\n          />\n        ) : (\n          <Notification message=\"No feedback given\" />\n        )}\n      </Section>\n    </>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}